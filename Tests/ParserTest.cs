using System;
using System.Linq;
using Xunit;
using YAMSE.DataLayer;

namespace Tests
{
    public class ParserTest
    {
        [Fact]
        public void RenameTest()
        {
            string newNameStr = "renamedAAA";
            var expectedBytesAfterRename = new byte[] { 0x27, 0x00, 0x00, 0x00, 0x23, 0xAE, 0x11, 0x00, 0x00, 0x00, 0x72, 0x65, 0x6E, 0x61, 0x6D, 0x65, 0x64, 0x41, 0x41, 0x41, 0x00, 0x22, 0xAE, 0x0A, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x24, 0xAE, 0x06, 0x00, 0x00, 0x00 };
            
            Dnc testDnc = new Dnc() { Name = "9balik2", dncKind = YAMSE.NodeType.Definition, dncType = DncType.GhostObject };
            testDnc.RawData = new byte[] { 0x24,0x00,0x00,0x00,0x23,0xAE,0x0E,0x00,0x00,0x00,0x39,0x62,0x61,0x6C,0x69,0x6B,0x32,0x00,0x22,0xAE,0x0A,0x00,0x00,0x00,0x01,0x00,0x00,0x00,0x24,0xAE,0x06,0x00,0x00,0x00 };

            YAMSE.Scene2Parser.RenameDnc(testDnc, newNameStr);

            Assert.True(testDnc.RawData.SequenceEqual(expectedBytesAfterRename));
        }
    }
}
